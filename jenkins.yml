---
- hosts: all
  vars_files:
    - vars.yml
  become: true
  tasks:
    - name: Add docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add docker APT repo
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"
        state: present

    - name: Install required apt packages
      apt:
        name:
          - python3-pip
          - apt-transport-https
          - curl
          - software-properties-common
          - docker-ce
        update_cache: true

    - name: Install required python packages
      pip:
        name:
          - docker

    - name: Ensure docker-py python package is not installed (clashes with docker package)
      pip:
        name:
          - docker-py
        state: absent

    - name: Ensure journald is running
      systemd:
        name: systemd-journald
        state: started
        enabled: true

    - name: Create web network
      docker_network:
        name: "{{web_network}}"
        state: present

    - name: Launch nginx-proxy container
      docker_container:
        name: nginx-proxy
        image: "jwilder/nginx-proxy:{{nginx_tag}}"
        state: started
        restart_policy: always
        ports:
          - "80:80"
          - "443:443"
        purge_networks: yes
        networks:
          - name: "{{web_network}}"
        volumes:
          - /etc/nginx/certs:/etc/nginx/certs:ro
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - /etc/nginx/vhost.d:/etc/nginx/vhost.d 
          - /usr/share/nginx/html:/usr/share/nginx/html
        labels:
          com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

    - name: Launch Lets Encrypt container
      docker_container:
        name: nginx-letsencrypt
        image: jrcs/letsencrypt-nginx-proxy-companion
        volumes_from:
          - nginx-proxy
        networks:
          - name: "{{web_network}}"
        volumes:
          - /etc/nginx/certs:/etc/nginx/certs:rw
          - /var/run/docker.sock:/var/run/docker.sock:ro

    - name: Launch hello-world
      docker_container:
        name: jenkins
        image: "tullyrankin/flask-hello-world:{{jenkins_tag}}"
        state: started
        exposed_ports:
          - 5000
        purge_networks: true
        networks:
          - name: "{{web_network}}"
        env:
          VIRTUAL_HOST: "jenkins.{{domain}}"
          VIRTUAL_PORT: "5000"
          LETSENCRYPT_EMAIL: "{{letsencrypt_email}}"
          LETSENCRYPT_HOST: "jenkins.{{domain}}"

    # - name: Launch Jenkins container
    #   docker_container:
    #     name: jenkins
    #     image: "jenkinsci/blueocean:{{jenkins_tag}}"
    #     state: started
    #     restart_policy: always
    #     exposed_ports:
    #       - "8080"
    #     env:
    #       HTTP_PORT: "8080"
    #     purge_networks: yes
    #     networks:
    #       - name: "{{web_network}}"
    #     volumes:
    #       - /var/jenkins_home:/var/jenkins_home
    #     user: root

  handlers:
    - name: restart nginx
      docker_container:
        name: nginx
        state: started
        restart: true
